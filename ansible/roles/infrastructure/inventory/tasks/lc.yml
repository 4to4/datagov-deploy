---

- name: Get facts about ckan db instance.
  rds:
    command: facts
    instance_name: "{{ ckan_db_instance_name }}"
    region: "{{ region }}"
  register: ckan_rds_db

- name: Get facts about datapusher db instance.
  rds:
    command: facts
    instance_name: "{{ datastore_db_instance_name }}"
    region: "{{ region }}"
  register: datastore_rds_db

- name: Create Web Proxy Launch Configuration
  ec2_lc:
    name: "{{ app }}-web-proxy-lc"
    state: present
    assign_public_ip: "{{ assign_public_ip }}"
    region: "{{ region }}"
    image_id: "{{ web_proxy_ami_id }}"
    key_name: "{{ key_name }}"
    security_groups: "{{ web_proxy_sg.group_id }}"
    instance_type: "{{ web_proxy_instance_size }}"
    user_data: |
      #!/bin/bash -ex
      apt-get update
      export ANSIBLE_CONFIG="{{ ansible_cfg }}"
      ansible-pull -i ansible/local -U "{{ git_repo }}" ansible/web-proxy.yml
      sed -i "s\data.gov\{{ internal_elb.elb.dns_name }}\g" "{{ nginx_config_path }}"
      service nginx restart

- name: Create Web Launch Configuration
  ec2_lc:
    name: "{{ app }}-web-lc"
    state: present
    region: "{{ region }}"
    image_id: "{{ web_ami_id }}"
    key_name: "{{ key_name }}"
    security_groups: "{{ web_sg.group_id }}"
    instance_type: "{{ web_instance_size }}"
    instance_profile_name: InventoryRole
    user_data: |
      #!/bin/bash -ex
      source /etc/profile
      exec > >(tee /var/log/user-data.log|logger -t user-data -s 2>/dev/console) 2>&1
      echo BEGIN
      service apache2 stop
      export ANSIBLE_CONFIG={{ ansible_cfg }}
      ansible-playbook \
        --extra-vars="CKAN_DB_SERVER={{ ckan_rds_db.instance.endpoint }} \ 
        DATASTORE_DB_SERVER={{ datastore_rds_db.instance.endpoint }} \
        SOLR_SERVER={{ solr_elb.elb.dns_name }} \
        BUCKET_NAME={{ bucket_name }}" \
        ~/ansible/main.yml
      service apache2 start
      echo END

- name: Create Solr Launch Configuration
  ec2_lc:
    name: "{{ app }}-solr-lc"
    state: present
    region: "{{ region }}"
    image_id: "{{ solr_ami_id }}"
    key_name: "{{ key_name }}"
    security_groups: "{{ solr_sg.group_id }}"
    instance_type: "{{ solr_instance_size }}"
#    user_data: |
#      #!/bin/bash -ex
#      source /etc/profile
#      exec > >(tee /var/log/user-data.log|logger -t user-data -s 2>/dev/console) 2>&1
#      echo BEGIN #Your code comes here"
#      export ANSIBLE_CONFIG={{ ansible_cfg }}
#      ansible-pull -v -i ansible/local -U "{{ git_repo }}" ansible/solr.yml
#      echo "Test Output"
#      echo END

- name: Create Jump Box Launch Configuration
  ec2_lc:
    name: "{{ app }}-jump-box-lc"
    state: present
    region: "{{ region }}"
    image_id: "{{ jump_box_ami_id }}"
    key_name: "{{ key_name }}"
    security_groups: "{{ jump_host_sg.group_id }}"
    instance_type: "{{ jump_box_instance_size }}"
    assign_public_ip: yes
